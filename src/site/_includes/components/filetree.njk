{% macro menuItem(fileOrFolderName, fileOrFolder, step, currentPath) %}
    {%if fileOrFolder.isNote or fileOrFolder.isFolder%}
        {%if fileOrFolder.isNote and not fileOrFolder.hide %}
            <div x-show="isOpen" x-cloak class="{{'filelist' if step>0}}">
                <div @click.stop class="notelink {{ 'active-note' if fileOrFolder.permalink === permalink}}">
                    {%- if not meta.noteIconsSettings.filetree -%}<i icon-name="sticky-note" aria-hidden="true"></i>{%- endif -%}
                    <a data-note-icon="{{fileOrFolder.noteIcon}}" style="text-decoration: none;" class="filename" href="{{fileOrFolder.permalink}}" {{ 'aria-current="page"' if fileOrFolder.permalink === permalink }}>{{fileOrFolder.name}} </a>
                </div>
            </div>
        {% elif fileOrFolder.isFolder%}
            <div class="folder inner-folder"  x-data="{isOpen: $persist(false).as('{{currentPath}}')}" :class="{ 'is-open': isOpen }" x-init="if ($el.querySelector('.active-note')) { isOpen = true }">
                <div class="foldername-wrapper align-icon" @click.stop="isOpen=!isOpen">
                <i class="chevron" icon-name="chevron-right" aria-hidden="true"></i>
                <span class="foldername">{{fileOrFolderName}}</span>
                </div>
                <div x-show="isOpen" x-cloak class="{{'filelist' if step>0}}">
                    {% for fileOrFolderName, child in fileOrFolder %}
                        {{menuItem(fileOrFolderName, child, step+1, (currentPath+"/"+fileOrFolderName))}}
                    {% endfor %}
                </div>
            </div>
        {% endif %}
        {%endif%}
    {% endmacro %}
    
    <div x-init="isDesktop = (window.innerWidth>=1400) ? true: false;" 
            x-on:resize.window="isDesktop = (window.innerWidth>=1400) ? true : false;" 
            x-data="{isDesktop: true, showFilesMobile: false}">

        <div x-show.important="!isDesktop" style="display: none;">
            {%include "components/filetreeNavbar.njk"%}
        </div>
        
        <div x-show="showFilesMobile && !isDesktop" @click="showFilesMobile = false" style="display:none;" class="fullpage-overlay"></div>

      <nav class="filetree-sidebar"  x-show.important="isDesktop || showFilesMobile" style="display: none;">
        <!-- Fixed header section -->
        <div class="sidebar-header">
            {% for imp in dynamics.filetree.beforeTitle %}
                {% include imp %}
            {% endfor %}
             <a href="/" style="text-decoration: none;">
                   <h1>{{meta.siteName}}</h1>
             </a>
             {% for imp in dynamics.filetree.afterTitle %}
                {% include imp %}
            {% endfor %}
            {% if settings.dgEnableSearch === true%}
                <div class="search-button-container">
                    {% include "components/searchButton.njk" %}
                </div>
            {%endif%}
        </div>
        
        <!-- Scrollable content section -->
        <div class="sidebar-content" x-data="{attempts:0,maxAttempts:12,container(){return $el.closest('.filetree-sidebar')},active(){const c=this.container();return c?c.querySelector('.notelink.active-note'):null},headerHeight(){const c=this.container();const h=c?c.querySelector('.sidebar-header'):null;return h?h.getBoundingClientRect().height:0},isVisible(el){return !!(el&&el.offsetParent!==null)},doScroll(){const c=this.container();const a=this.active();if(!c||!a)return;const hh=this.headerHeight();c.style.scrollPaddingTop=(hh+8)+'px';const cr=c.getBoundingClientRect();const ar=a.getBoundingClientRect();const vt=cr.top+hh;const vb=cr.bottom;if(ar.top<vt||ar.bottom>vb){const target=c.scrollTop+(ar.top-cr.top)-hh-8;c.scrollTo({top:Math.max(0,target),behavior:'smooth'});}},tryScroll(){const a=this.active();const c=this.container();if(!c||!a)return;if(!this.isVisible(a)&&this.attempts<this.maxAttempts){this.attempts++;requestAnimationFrame(()=>{setTimeout(()=>this.tryScroll(),16)});return;}this.doScroll();}}" x-init="$nextTick(()=>{requestAnimationFrame(()=>{setTimeout(()=>{attempts=0;tryScroll()},0)})})">
             <div class="folder" x-data="{isOpen: true}">
                   {%- for fileOrFolderName, fileOrFolder in filetree -%}
                      {{menuItem(fileOrFolderName, fileOrFolder, 0, fileOrFolderName)}}
                   {%- endfor -%}
             </div>
        </div>
      </nav>
    </div>
